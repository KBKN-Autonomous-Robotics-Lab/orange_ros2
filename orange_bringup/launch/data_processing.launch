<?xml version="1.0"?>
<launch>
  <arg name="odom_topic" default="/odom"/>
  <arg name="imu_topic" default="/imu"/>
  <arg name="fusion_odom_topic" default="/localization/odom"/>
  <arg name="ekf_publish_TF" default="true"/>
  <arg name="hokuyo_scan_topic" default="/hokuyo_scan"/>
  <arg name="velodyne_scan_topic" default="/velodyne_scan"/>
  <arg name="velodyne_points_topic" default="/velodyne_points"/>
  <arg name="livox_scan_topic" default="/livox_scan"/>
  <arg name="livox_points_topic" default="/livox_points"/>
  <arg name="merged_cloud_topic" default="/merged_cloud"/>
  <arg name="merged_scan_topic" default="/merged_scan"/>
  <arg name="xacro_file_path" default="$(find-pkg-share orange_description)/xacro/orange_robot.xacro"/>
  <!-- robot_localization -->
  <!--<include file="$(find-pkg-share orange_sensor_tools)/launch/localization.launch.xml">
    <arg name="odom_in" value="$(var odom_topic)"/>
    <arg name="imu_in" value="$(var imu_topic)"/>
    <arg name="fusion_odom_out" value="$(var fusion_odom_topic)"/>
  </include>-->
  <!-- Fast lio odom -->
  <include file="$(find-pkg-share fast_lio)/launch/mapping.launch.py"/>
  <node pkg="fast_odom_convert" exec="fast_odom_convert"/>
  <!-- combination_GPSposition_GPSheading -->
  <node pkg="orange_bringup" exec="combination" output="screen"/>
  <!-- ekf_myself -->
  <node pkg="orange_bringup" exec="ekf_myself" output="screen">
    <param name="ekf_publish_TF" value="$(var ekf_publish_TF)"/>
    <param name="speed_limit" value="3.5"/>
    <param name="speed_stop" value="0.15"/>
  </node>
  <!-- ground_segmentation -->
  <!--<include file="$(find-pkg-share orange_sensor_tools)/launch/ground_segmentation.launch.xml">
    <arg name="config_file_path" value="$(find-pkg-share orange_sensor_tools)/config/ground_segmentation.yaml"/>
    <arg name="input_topic" value="/converted_pointcloud2"/>
    <arg name="ground_output_topic" value="$(var livox_points_topic)/ground"/>
    <arg name="obstacle_output_topic" value="$(var livox_points_topic)/obstacle"/>
  </include> -->
  <!-- ground_segmentation2 -->
  <include file="$(find-pkg-share pcd_convert)/launch/pcd_convert.launch.py"/>
  <!-- pointcloud_to_laserscan -->
  <!--<include file="$(find-pkg-share orange_sensor_tools)/launch/pointcloud_to_laserscan.launch.xml">
    <arg name="cloud_in" value="$(var velodyne_points_topic)/obstacle"/>
    <arg name="scan_out" value="$(var velodyne_scan_topic)"/>
  </include>-->
  <!-- pointcloud2_to_laserscan -->
  <include file="$(find-pkg-share orange_sensor_tools)/launch/livox_to_pointcloud2_laserscan.launch.py">
    <arg name="cloud_in" value="/pcd_segment_obs"/>
    <arg name="scan_out" value="$(var livox_scan_topic)"/>
  </include>
  <!-- laserscan_multi_merger -->
  <!--<include file="$(find-pkg-share orange_sensor_tools)/launch/laserscan_multi_merger.launch.xml">
    <arg name="delete_intensity" value="true"/>
    <arg name="destination_frame" value="livox_frame"/>
    <arg name="cloud_destination_topic" value="$(var merged_cloud_topic)"/>
    <arg name="scan_destination_topic" value="$(var merged_scan_topic)"/>
    <arg name="laserscan_topics" value="$(var hokuyo_scan_topic) $(var livox_scan_topic)"/>
  </include>-->
</launch>
