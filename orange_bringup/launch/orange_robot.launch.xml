<?xml version="1.0"?>
<launch>
  <!--# Control mode
      # 1: relative position control mode
      # Default: Subscribe to "/zlac8015d/pos/cmd_deg" and "/zlac8015d/pos/cmd_dist"
      # 3: Speed rpm control mode
      # Default: Subscribe to "/zlac8015d/twist/cmd_vel", "/zlac8015d/vel/cmd_vel" and "/zlac8015d/vel/cmd_rpm"-->
  <arg name="control_mode" default="3"/>
  <arg name="debug_motor" default="false"/>
  <arg name="debug_imu" default="false"/>
  <arg name="publish_TF" default="true"/>
  <arg name="publish_odom" default="true"/>
  <arg name="twist_cmd_vel_topic" default="/cmd_vel"/>
  <arg name="cmd_vel_topic" default="/vel/cmd_vel"/>
  <arg name="cmd_rpm_topic" default="/vel/cmd_rpm"/>
  <arg name="cmd_deg_topic" default="/pos/cmd_deg"/>
  <arg name="cmd_dist_topic" default="/pos/cmd_dist"/>
  <arg name="hokuyo_scan_topic" default="/hokuyo_scan"/>
  <arg name="odom_topic" default="/odom"/>
  <arg name="imu_topic" default="/livox/imu"/>
  <arg name="fusion_odom_topic" default="/fusion/odom"/>
  <arg name="velodyne_scan_topic" default="/velodyne_scan"/>
  <arg name="livox_scan_topic" default="/livox_scan"/>
  <arg name="livox_points_topic" default="/livox_points"/>
  <arg name="velodyne_points_topic" default="/velodyne_points"/>
  <arg name="merged_cloud_topic" default="/merged_cloud"/>
  <arg name="merged_scan_topic" default="/merged_scan"/>
  <arg name="xacro_file_path" default="$(find-pkg-share orange_description)/xacro/orange_robot.xacro"/>
  <arg name="motor_driver_config_file_path" default="$(find-pkg-share orange_bringup)/config/motor_driver_params.yaml"/>
  <!-- robot_state_publisher -->
  <node pkg="robot_state_publisher" exec="robot_state_publisher">
    <param name="robot_description" value="$(command 'xacro $(var xacro_file_path)')"/>
  </node>
  <!-- joint_state_publisher -->
  <node pkg="joint_state_publisher" exec="joint_state_publisher">
    <param name="robot_description" value="$(command 'xacro $(var xacro_file_path)')"/>
  </node>
  <!-- robot_localization -->
  <!--<include file="$(find-pkg-share orange_sensor_tools)/launch/localization.launch.xml">
    <arg name="odom_in" value="$(var odom_topic)"/>
    <arg name="imu_in" value="$(var imu_topic)"/>
    <arg name="fusion_odom_out" value="$(var fusion_odom_topic)"/>
  </include>-->
  <!-- motor_driver_node -->
  <node pkg="orange_bringup" exec="motor_driver_node" output="screen">
    <param from="$(var motor_driver_config_file_path)"/>
    <param name="port" value="/dev/ZLAC8015D"/>
    <param name="control_mode" value="$(var control_mode)"/>
    <param name="debug" value="$(var debug_motor)"/>
    <param name="twist_cmd_vel_topic" value="$(var twist_cmd_vel_topic)"/>
    <param name="cmd_vel_topic" value="$(var cmd_vel_topic)"/>
    <param name="cmd_rpm_topic" value="$(var cmd_rpm_topic)"/>
    <param name="cmd_deg_topic" value="$(var cmd_deg_topic)"/>
    <param name="cmd_dist_topic" value="$(var cmd_dist_topic)"/>
    <param name="publish_TF" value="$(var publish_TF)"/>
    <param name="TF_header_frame" value="odom"/>
    <param name="TF_child_frame" value="base_footprint"/>
    <param name="publish_odom" value="$(var publish_odom)"/>
    <param name="odom_header_frame" value="odom"/>
    <param name="odom_child_frame" value="base_footprint"/>
  </node>
  <!-- velodyne -->
  <!--<node pkg="velodyne_driver" exec="velodyne_driver_node">
    <param name="device_ip" value=""/>
    <param name="gps_time" value="false"/>
    <param name="time_offset" value="0.0"/>
    <param name="enabled" value="true"/>
    <param name="read_once" value="false"/>
    <param name="read_fast" value="false"/>
    <param name="repeat_delay" value="0.0"/>
    <param name="frame_id" value="velodyne"/>
    <param name="model" value="VLP16"/>
    <param name="rpm" value="600.0"/>
    <param name="port" value="2368"/>
    <param name="timestamp_first_packet" value="false"/>
  </node>
  <node pkg="velodyne_pointcloud" exec="velodyne_transform_node">
    <param name="calibration" value="$(find-pkg-share velodyne_pointcloud)/params/VLP16db.yaml"/>
    <param name="model" value="VLP16"/>
    <param name="min_range" value="0.9"/>
    <param name="max_range" value="100.0"/>
    <param name="view_direction" value="0.0"/>
    <param name="fixed_frame" value=""/>
    <param name="target_frame" value=""/>
    <param name="organize_cloud" value="false"/>
  </node>-->
  <!-- mid360 -->
  <include file="$(find-pkg-share livox_ros_driver2)/launch_ROS2/msg_MID360_launch.py">
  </include>
  <node pkg="livox_to_pointcloud2" exec="livox_to_pointcloud2_node">
    <remap from="/livox_pointcloud" to="/livox/lidar"/>
  </node>
  <!-- hokuyo -->
  <!--<node pkg="urg_node" exec="urg_node_driver">
    <param name="serial_port" value="/dev/sensors/hokuyo_urg"/>
    <param name="laser_frame_id" value="hokuyo_link"/>
    <param name="angle_max" value="1.22"/>
    <param name="angle_min" value="-1.22"/>
    <remap from="/scan" to="/hokuyo_scan"/>
  </node>-->
  <!-- imu  -->
  <!--<include file="$(find-pkg-share icm_20948)/launch/run.launch.xml">
    <arg name="port" value="/dev/sensors/imu"/>
    <arg name="time_out" value="0.5"/>
    <arg name="baudrate" value="115200"/>
    <arg name="imu_topic" value="imu"/>
    <arg name="frame_id" value="imu_link"/>
    <arg name="debug" value="$(var debug_imu)"/>
  </include>-->
  <!-- estop  -->
  <!--<node pkg="estop_ros" exec="cmd_vel_override_node" output="screen">
    <param name="port" value="/dev/sensors/estop"/>
    <param name="baudrate" value="115200"/>
    <param name="time_out" value="500"/>
    <param name="serial_interval" value="0.01"/>
    <remap from="/estop/state" to="/estop"/>
  </node>-->
  <!-- ground_segmentation -->
  <include file="$(find-pkg-share orange_sensor_tools)/launch/ground_segmentation.launch.xml">
    <arg name="config_file_path" value="$(find-pkg-share orange_sensor_tools)/config/ground_segmentation.yaml"/>
    <arg name="input_topic" value="/converted_pointcloud2"/>
    <arg name="ground_output_topic" value="$(var livox_points_topic)/ground"/>
    <arg name="obstacle_output_topic" value="$(var livox_points_topic)/obstacle"/>
  </include>
  <!-- pointcloud_to_laserscan -->
  <!--<include file="$(find-pkg-share orange_sensor_tools)/launch/pointcloud_to_laserscan.launch.xml">
    <arg name="cloud_in" value="$(var velodyne_points_topic)/obstacle"/>
    <arg name="scan_out" value="$(var velodyne_scan_topic)"/>
  </include>-->
  <!-- pointcloud2_to_laserscan -->
  <include file="$(find-pkg-share orange_sensor_tools)/launch/livox_to_pointcloud2_laserscan.launch.py">
    <arg name="cloud_in" value="$(var livox_points_topic)/obstacle"/>
    <arg name="scan_out" value="$(var livox_scan_topic)"/>
  </include>
  <!-- laserscan_multi_merger -->
  <!--<include file="$(find-pkg-share orange_sensor_tools)/launch/laserscan_multi_merger.launch.xml">
    <arg name="delete_intensity" value="true"/>
    <arg name="destination_frame" value="velodyne"/>
    <arg name="cloud_destination_topic" value="$(var merged_cloud_topic)"/>
    <arg name="scan_destination_topic" value="$(var merged_scan_topic)"/>
    <arg name="laserscan_topics" value="$(var hokuyo_scan_topic) $(var velodyne_scan_topic)"/>
  </include>-->
</launch>
